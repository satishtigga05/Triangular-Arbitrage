{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "detail.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { onMount } from \"svelte\";\nimport dayjs from \"dayjs\";\nimport Decimal from \"decimal.js\";\nimport buildPairs from \"./lib/pairs\";\nimport buildProfitFunc from \"./lib/profit\";\n\nimport socketSubscribe from \"./lib/socket\";\n\nimport ResultsTable from \"./winners-table.svelte\";\nimport DetailModal from \"./detail.svelte\";\n\nlet modalDetail = false;\nlet contentModal = {};\n\nconst showPopupLong = e => {\n\n  modalDetail = true;\n  contentModal = e;\n\n};\n\nconst info = {\n  pairslen: 0,\n  msgcount: 0,\n  cycleschecked: 0,\n  cyclescheckedPerSecond: 0,\n  currentStatus: \"\",\n}\nlet oldWinners = null;\nlet winners = [];\nlet tops = [];\n\nlet checkProfit;\n\nonMount( async () => {\n\n  const socket = await socketSubscribe();\n  const { hashMarket, pairs: allPairs } = await buildPairs();\n\n  info.currentStatus = \"Connecting to binance\";\n\n  info.pairslen = allPairs.length;\n  info.socket = socket;\n  setInterval( () => {\n\n    info.msgcount = socket.msgcount;\n    socket.msgcount = 0;\n    info.cyclescheckedPerSecond = info.cycleschecked;\n    info.cycleschecked = 0;\n\n  }, 1000 )\n\n  checkProfit = await buildProfitFunc();\n\n  function tick() {\n\n    if ( info.currentStatus === \"Connecting to binance\" ) {\n\n      if ( info.msgcount > 0 ) {\n\n        info.currentStatus = \"Working\";\n\n      }\n\n    } else {\n\n      info.currentStatus = \"Working\";\n\n    }\n\n    const startTime = +new Date();\n    const uPair = socket.pairupdate;\n    const markets = socket.m;\n\n    socket.pairupdate = [];\n\n    let pairsToTest = uPair.map( pair => hashMarket[ pair ] ).flat()\n    pairsToTest = [ ...new Set( pairsToTest ) ].map( id => allPairs[ id ] ).filter( e => e );\n\n    if ( ! pairsToTest.length ) {\n\n      setTimeout( tick, 50 );\n      return;\n\n    }\n\n    // voy con todos!\n    // const pairsToTest = allPairs.filter(p => intersect(p, u).length)\n\n    let ret;\n    try {\n\n      info.cycleschecked += pairsToTest.length;\n      ret = checkProfit( pairsToTest, markets );\n      ret.sort( ( a, b ) => b.profit.sub( a.profit ) )\n\n      const w = ret.filter( e => e.profit.gt( 1 ) );\n      if ( w.length ) {\n\n        winners = w;\n        console.log( winners );\n        w.forEach( e => {\n\n          e.time = dayjs().format();\n\n          for ( let k = 0; k < ( e.length - 1 ); k += 1 ) {\n\n            delete socket.m[ e[ k ] + \"/\" + e[ k + 1 ] ];\n            delete socket.m[ e[ k + 1 ] + \"/\" + e[ k ] ];\n\n          }\n\n        } );\n\n      }\n\n    } catch ( err ) {\n\n      console.error( err )\n      console.log( pairsToTest )\n\n    }\n\n    console.log( \"cycle\", +new Date() - startTime, \"ms\" )\n    if ( winners.length ) {\n\n      info.currentStatus = \"Found profitable cycles, halt for 30 seconds\";\n      // halt 30 seconds\n      setTimeout( () => {\n\n        info.currentStatus = \"Working\";\n        oldWinners = winners;\n        winners = [];\n        tick();\n\n      }, 1000 * 30 )\n      return;\n\n    }\n\n    tops = ret\n      .slice( 0, 10 );\n\n    setTimeout( tick, 50 )\n\n  }\n  setTimeout( tick, 1000 );\n  return () => {}\n\n} );\n</script>\n\n<main>\n\t<h1>Binance triangular arbitrage in real time</h1>\n\t<h1><small>find market imperfections easily!<small> <a class=\"github-button\" href=\"https://github.com/eugenioclrc/binance-crypto-triangular-arbitrage\" data-icon=\"octicon-star\" aria-label=\"Star eugenioclrc/binance-crypto-triangular-arbitrage on GitHub\">Star</a></h1>\n\n\t<p>\n\t\tTriangular arbitrage is the act of exploiting an arbitrage opportunity resulting from a pricing discrepancy among three different currencies. A triangular arbitrage strategy involves three trades, exchanging the initial currency for a second, the second currency for a third, and the third currency for the initial. During the second trade, the arbitrageur locks in a zero-risk profit from the discrepancy that exists when the market cross exchange rate is not aligned with the implicit cross exchange rate. A profitable trade is only possible if there exist market imperfections. Profitable triangular arbitrage is very rarely possible because when such opportunities arise, traders execute trades that take advantage of the imperfections and prices adjust up or down until the opportunity disappears.[6]\n\n\t<p><b>Want to help me?</b> please register your binance account using my referral link visit\n\t<a href=\"https://www.binance.com/en/register?ref=Q952PPIF\">https://www.binance.com/en/register</a></p>\n\n\n\tTotal combinations: {info.pairslen} pairs<br >\n\tSocket updates per second: {info.msgcount}<br />\n\tCycles checked per second: {info.cyclescheckedPerSecond}<br />\n\n\t<big>\n\t\tCurrent status<br>\n\t\t<b>{info.currentStatus}</b><br />\n\t</big>\n\n\n\t<a class=\"github-button\" href=\"https://github.com/eugenioclrc/binance-crypto-triangular-arbitrage\" data-icon=\"octicon-star\" aria-label=\"Star eugenioclrc/binance-crypto-triangular-arbitrage on GitHub\">Star</a>\n\t<h2>WINNERS</h2>\n\t{#if ! winners.length}\n\t\t<b>No winner pair yet</b>\n\t{:else}\n\t\t<ResultsTable results={winners} />\n\t{/if}\n\n\n\t{#if tops.length}\n\t<h2>Pairs</h2>\n\t<table class=\"styled-table pairs-table\">\n\t\t<thead>\n\t\t\t<th>Pairs cycle</th>\n\t\t\t<th>Profit (BNB Fess included)</th>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each tops as t}\n\t\t\t<tr>\n\t\t\t\t<td style=\"min-width: 235px;\">\n\t\t\t\t\t{@html t.chain.join( \" &rarr; \" )}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<pre style=\"cursor:pointer\" on:click={() => showPopupLong( t )}>{t.profit.sub(1).mul(100).toFixed( 4 )}% &#9432;</pre>\n\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n\t{/if}\n\t<blockquote>\n\t\tTrades profit are calculate on a base budget of 100USD and a 0.0075% fee\n\t</blockquote>\n\n\t{#if oldWinners && oldWinners.length}\n\t\t<h2>PREV CYCLE WINNERS</h2>\n\t\t<ResultsTable results={oldWinners} />\n\t{/if}\n\n</main>\n{#if modalDetail}\n\t<DetailModal on:close={() => modalDetail = false}>\n\t\t<ResultsTable results={[ contentModal ]} />\n\t</DetailModal>\n{/if}\n\n<style>\n\ttable {\n\t\tmargin: auto;\n\t}\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 2em;\n\t\tfont-weight: 400;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n  .pairs-table {\n    max-width: 320px; margin: 30px auto;\n  }\n  .pairs-table td {\n    padding: 5px 15px;\n  }\n\n</style>\n",
    "<script>\nexport let contentModal = {};\n\nimport { createEventDispatcher } from 'svelte';\n\nconst dispatch = createEventDispatcher();\n\nfunction close() {\n  dispatch('close');\n}\n\n</script>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n    <span on:click={close} class=\"close\">&times;</span>\n    <slot></slot>\n  </div>\n\n</div>\n<style>\n.modal {\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button */\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "AA6NC,KAAK,4BAAC,CAAC,AACN,MAAM,CAAE,IAAI,AACb,CAAC,AACD,IAAI,4BAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,4BAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,4BAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC,AAEA,YAAY,4BAAC,CAAC,AACZ,SAAS,CAAE,KAAK,CAAE,MAAM,CAAE,IAAI,CAAC,IAAI,AACrC,CAAC,AACD,0BAAY,CAAC,EAAE,cAAC,CAAC,AACf,OAAO,CAAE,GAAG,CAAC,IAAI,AACnB,CAAC;ACjOH,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,CAAC,CACV,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,IAAI,CACd,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5B,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AAGD,cAAc,cAAC,CAAC,AACd,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,KAAK,CAAE,GAAG,AACZ,CAAC,AAGD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,oBAAM,MAAM,CACZ,oBAAM,MAAM,AAAC,CAAC,AACZ,KAAK,CAAE,KAAK,CACZ,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,AACjB,CAAC"
}